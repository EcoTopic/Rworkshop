---
title: "`tableone` and its Basic **Statistics**"
subtitle: "**Baseline Characteristics in Biomedical Research**"
author: "Marothi Peter LETSOALO"
format: 
  qmdrslides-revealjs:
    echo: true
editor_options: 
  chunk_output_type: inline
bibliography: references.bib

execute:
  cache: true

---

```{r,include=FALSE}
library(here)
require(tidyverse)  #installed for data manipulation and exploration
require(data.table) #installed for %like% function
require(janitor)    #data cleaning *presets
library(tableone)
library(flextable)
library(officer)
```

```{r,include=FALSE, include=FALSE}
#| file: functions/added_functions.R
```
```{r,include=FALSE, include=FALSE}
#| file: functions/dt_pipeline.R
```


## Learning outcomes

::: {.fragment .fade-in-then-semi-out}
-   Refresh on what baseline characteristics are and why they are important.
:::
::: {.fragment .fade-in-then-semi-out}
-   Know which descriptive statistics and statistical tests are used to evaluate baseline characteristic.
:::
::: {.fragment .fade-in-then-semi-out}
-   Know what is `tableone` package and how it works.
:::
::: {.fragment .fade-in-then-semi-out}
-   Know how to use `tableone` package with a real data set.
:::

## Learning outcomes

```{r echo=FALSE}
set_caption(
  TABLE_ONE%>%
  theme_booktabs()%>%
  autofit()%>%
  align(j=c(2:5),align = 'center')%>%
  align(i=c(5:8),j=c(1),align = 'right')%>%
  bold(part='header'),
  "Baseline demographics and clinical characteristics"
)
```

# Let's do a refresh!!!

## Introduction

#### What are baseline characteristics and why are they important?

::: {.fragment .fade-in-then-semi-out}
-   Baseline characteristics describe the participants at the start of a study, for example 
:::
::: {.fragment .fade-in-then-semi-out}
**age**, **sex**, **disease severity**, etc.*
:::
::: {.fragment .fade-in-then-semi-out}
-   They help readers assess the validity and applicability of the study results [@Schulz2010; @altman1985].
:::
::: {.fragment .fade-in-then-semi-out}
-   They allow researchers to explore the treatment effect across different subgroups [@matthews2006].
:::

::: notes
-   Explain what validity and applicability mean in the context of research.
-   Give examples of subgroups and how they can influence the treatment effect.
:::


## Methods

#### Which descriptive statistics and statistical tests?

::: {.fragment .fade-in-then-semi-out}
- Descriptive statistics summarize the distribution and characteristics of a variable, such as 
:::
::: {.fragment .fade-in-then-semi-out}
**means** (**standard deviations**), **medians** (**interquartile range**), **count** (**percentage**)
:::
::: {.fragment .fade-in-then-semi-out}
-   Statistical tests evaluate whether there is a significant difference or association between groups or variables, such as 
:::
::: {.fragment .fade-in-then-semi-out}

**t-tests**, **anova**, **rank sum tests**, **chi-squared tests**
:::
::: {.fragment .fade-in-then-semi-out}
-   **Standardized mean difference** (SMD) is a measure of the effect size that can compare different variables or combine results from different studies [@Schulz2010].
:::

::: notes
-   Explain what distribution and characteristics mean in the context of statistics.
-   Give examples of when to use different statistical tests and how to interpret them.
-   Explain what effect size means and why it is important.
:::


## R package tableone

#### What is `tableone` package and how does it work?

::: {.fragment .fade-in-then-semi-out}
-   `tableone` is a package that simplifies the creation of "Table 1: Baseline demographics and clinical characteristics" [@tableone].
:::
::: {.fragment .fade-in-then-semi-out}
-   It can handle both continuous and categorical variables, and provide descriptive statistics, statistical tests, and SMDs.
:::
::: {.fragment .fade-in-then-semi-out}
-   It can handle weighted data using the survey package, which allows researchers to account for complex sampling designs and adjust for confounding factors.
:::
::: {.fragment .fade-in-then-semi-out}
-   It has a simple and flexible syntax, and can produce nice-looking tables using the `print` or `kableone` function (together with `flextable` you get nice tables).
:::

::: notes
-   Explain what Table 1 is and why it is important in research reports.
-   Explain what continuous and categorical variables are and how to handle them differently.
-   Explain what weighted data, complex sampling designs, and confounding factors are and how they affect the analysis.
-   Show an example of the syntax and output of tableone.
:::

## Load `tableone` package
[tableone Github Site](https://github.com/kaz-yos/tableone)
```{r}
library(tableone) # Loading/Attaching and Listing of Packages
```

- CreateTableOne function
- svyCreateTableOne function (not in the scope)

```{r}
#| eval: false
?CreateTableOne
```

## CreateTableOne Function
::: {.panel-tabset}

## Data
::: {.fragment .fade-in-then-semi-out style="font-size: 0.75em;"}
  - `data`: A data frame in which these variables exist. All variables (both vars and strata) must be in this data frame.
  - `vars`: Variables to be summarized given as a character vector. Factors are handled as categorical variables, whereas numeric variables are handled as continuous variables. If empty, all variables in the data frame specified in the data argument are used.
  - `strata`: Stratifying (grouping) variable name(s) given as a character vector. If omitted, the overall results are returned.
  - `factorVars`: Numerically coded variables that should be handled as categorical variables given as a character vector. Do not include factors, unless you need to relevel them by removing empty levels. If omitted, only factors are considered categorical variables. The variables specified here must also be specified in the vars argument.
  - `includeNA = FALSE`: If TRUE, NA is handled as a regular factor level rather than missing. NA is shown as the last factor level in the table. Only effective for categorical variables.
:::


## Testing
::: {.fragment .fade-in-then-semi-out}
  - `test = TRUE`: If TRUE, as in the default and there are more than two groups, groupwise comparisons are performed.
:::

## ...category vars 
::: {.fragment .fade-in-then-semi-out style="font-size: 1em;"}
  - `testApprox = chisq.test`: A function used to perform the large sample approximation based tests. The default is chisq.test. This is not recommended when some of the cell have small counts like fewer than 5.
  - `argsApprox = list(correct = TRUE)`: A named list of arguments passed to the function specified in testApprox. The default is list (correct = TRUE), which turns on the continuity correction for chisq.test.
  - `testExact = fisher.test`: A function used to perform the exact tests. The default is fisher.test. If the cells have large numbers, it will fail because of memory limitation. In this situation, the large sample approximation based should suffice.
:::

## ...continuous vars
::: {.fragment .fade-in-then-semi-out style="font-size: 0.9em;"}
  - `testNormal = oneway.test`: A function used to perform the normal assumption based tests. The default is oneway.test. This is equivalent of the t-test when there are only two groups.
  - `argsNormal = list(var.equal = TRUE)`: A named list of arguments passed to the function specified in testNormal.
  - `testNonNormal = kruskal.test`: A function used to perform non-normal assumption based tests.
  - `argsNonNormal = list(NULL)`: A named list of arguments passed to the function specified in testNonNormal.
  - `smd = TRUE`: If set to TRUE, standardized mean differences are calculated.
:::

## Total
::: {.fragment .fade-in-then-semi-out}
  - `addOverall = FALSE`: If set to TRUE, an overall column is added to the table.
:::

:::

## `print` function for `CreateTableOne` object

::: {.panel-tabset}

## Object
::: {.fragment .fade-in-then-semi-out}
  - `x`: object that you want to print.
:::  

## Simple look
::: {.fragment .fade-in-then-semi-out style="font-size: 0.8em;"}
  - `printToggle = TRUE`: If set to TRUE, the function will print the table.
  - `quote = FALSE`: If set to FALSE, the function will not quote character strings.
  - `varLabels = FALSE`: If set to TRUE, variable labels (if available) are used instead of variable names.
  - `explain = TRUE`: If set to TRUE, explanations for the statistics are printed.
  - `noSpaces = FALSE`: If set to TRUE, spaces are removed from variable names.
  - `padColnames = FALSE`: If set to TRUE, column names are padded with spaces for alignment.
  - `dropEqual = FALSE`: If set to TRUE, the equal sign is dropped from p-values.
  - `showAllLevels = FALSE`: If set to TRUE, all levels of factors are shown even if some levels have zero count.
:::

## Decimals
::: {.fragment .fade-in-then-semi-out}
  - `catDigits = 1`: The number of digits after the decimal point for categorical variables.
  - `contDigits = 2`: The number of digits after the decimal point for continuous variables.
  - `pDigits = 3`: The number of digits after the decimal point for p-values.
  - `formatOptions = list(scientific = FALSE)`: A list of options for formatting numbers.
:::

## Variables 
::: {.fragment .fade-in-then-semi-out style="font-size: 0.9em;"}
  - `missing = FALSE`: If set to TRUE, missing values are included in the table.
  - `minMax = FALSE`: If set to TRUE, minimum and maximum values are included in the table for continuous variables.
  - `format = c("fp", "f", "p", "pf")[1]`: The format of the table. Options include “fp” (frequency and percentage), “f” (frequency only), “p” (percentage only), and “pf” (percentage and frequency).
  - `nonnormal = NULL`: A character vector of non-normal variables. For these variables, median and IQR are reported instead of mean and SD.
  - `cramVars = NULL`: A character vector of variables for which Cramér’s V is calculated.
:::

## Test
::: {.fragment .fade-in-then-semi-out}
  - `test = TRUE`: If set to TRUE, tests are performed for differences across strata.
  - `exact = NULL`: A character vector of variables for which exact tests are performed instead of chi-squared tests.
  - `smd = FALSE`: If set to TRUE, standardized mean differences are calculated.
:::
:::

## References

